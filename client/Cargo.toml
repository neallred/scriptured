[package]
name = "client"
version = "0.1.0"
authors = ["neallred <neallred@gmail.com>"]
edition = "2018"
repository = "https://github.com/neallred/verily"
description = "High precision and recall scripture searchng for the web."
license = "GPL-3.0"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
serde = { version = "1.0.103", features = ["derive"] }
serde_json = "1.0.42"
serde_derive = "1.0.103"  

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.1", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.2", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.2"

# Having this here gives a warning when doing a regular cargo build,
# but it looks like wasm-pack build does not read from the workspace Cargo.toml,
# so keep this here.
# See https://github.com/rust-lang/rust/issues/56454 for a possible resolution.
[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"

[dependencies.web-sys]
version = "0.3"
features = [
 "console",
]

[dependencies.wasm-bindgen]
version = "0.2"
features = ["serde-serialize"]
